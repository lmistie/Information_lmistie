    НАЗВАНИЕ
       nmap - Утилита для исследования сети и сканер портов

    СИНТАКСИС
       nmap [Тип сканирования...] [Опции] {цель сканирования}

    ОПИСАНИЕ
       Nmap («Network Mapper») - это утилита с открытым исходным кодом
       для исследования сети и проверки безопасности. Она была
       разработана для быстрого сканирования больших сетей, хотя
       прекрасно справляется и с единичными целями. Nmap использует
       "сырые" IP пакеты оригинальным способом, чтобы определить какие
       хосты доступны в сети, какие службы (название приложения и
       версию) они предлагают, какие операционные системы (и версии ОС)
       они используют, какие типы пакетных фильтров/брандмауэров
       используются и еще множество других характеристик. В то время,
       как Nmap обычно используется для проверки безопасности, многие
       системные администраторы находят ее полезной для обычных задач,
       таких как контролирование структуры сети, управление расписаниями
       запуска служб и учет времени работы хоста или службы.

       Выходные данные Nmap это список просканированных целей с
       дополнительной информацией по каждой из них в зависимости от
       заданных опций. Ключевой информацией является «таблица важных
       портов».  Эта таблица содержит номер порта, протокол, имя службы
       и состояние. Состояние может иметь значение open (открыт),
       filtered (фильтруется), closed (закрыт) или unfiltered (не
       фильтруется).  Открыт означает, что приложение на целевой машине
       готово для установки соединения/принятия пакетов на этот порт.
       Фильтруется означает, что брандмауэр, сетевой фильтр, или
       какая-то другая помеха в сети блокирует порт, и Nmap не может
       установить открыт этот порт или закрыт.  Закрытые порты не
       связаны ни с каким приложением, но могут быть открыты в любой
       момент. Порты расцениваются как не фильтрованные, когда они
       отвечают на запросы Nmap, но Nmap не может определить открыты они
       или закрыты. Nmap выдает комбинации открыт|фильтруется и
       закрыт|фильтруется, когда не может определить, какое из этих двух
       состояний описывает порт. Эта таблица также может предоставлять
       детали о версии программного обеспечения, если это было
       запрошено. Когда осуществляется сканирование по IP протоколу
       (-sO), Nmap предоставляет информацию о поддерживаемых протоколах,
       а не об открытых портах.

       В дополнение к таблице важных портов Nmap может предоставлять
       дальнейшую информацию о целях: преобразованные DNS имена,
       предположение об используемой операционной системе, типы
       устройств и MAC адреса.

       Типичное сканирование с использованием Nmap показано в Пример 1.
       Единственные аргументы, использованные в этом примере - это -A,
       для определения версии ОС, сканирования с использованием скриптов
       и трассировки; -T4 для более быстрого выполнения; затем два
       целевых хоста.

       Пример 1. Типичный пример сканирования с помощью Nmap

           # nmap -A -T4 scanme.nmap.org playground

           Starting Nmap ( https://nmap.org )
           Interesting ports on scanme.nmap.org (64.13.134.52):
           (The 1663 ports scanned but not shown below are in state: filtered)
           PORT    STATE  SERVICE VERSION
           22/tcp  open   ssh     OpenSSH 3.9p1 (protocol 1.99)
           53/tcp  open   domain
           70/tcp  closed gopher
           80/tcp  open   http    Apache httpd 2.0.52 ((Fedora))
           113/tcp closed auth
           Device type: general purpose
           Running: Linux 2.4.X|2.5.X|2.6.X
           OS details: Linux 2.4.7 - 2.6.11, Linux 2.6.0 - 2.6.11

           Interesting ports on playground.nmap.org (192.168.0.40):
           (The 1659 ports scanned but not shown below are in state: closed)
           PORT     STATE SERVICE       VERSION
           135/tcp  open  msrpc         Microsoft Windows RPC
           139/tcp  open  netbios-ssn
           389/tcp  open  ldap?
           445/tcp  open  microsoft-ds  Microsoft Windows XP microsoft-ds
           1002/tcp open  windows-icfw?
           1025/tcp open  msrpc         Microsoft Windows RPC
           1720/tcp open  H.323/Q.931   CompTek AquaGateKeeper
           5800/tcp open  vnc-http      RealVNC 4.0 (Resolution 400x250; VNC port: 5900)
           5900/tcp open  vnc           VNC (protocol 3.8)
           MAC Address: 00:A0:CC:63:85:4B (Lite-on Communications)
           Device type: general purpose
           Running: Microsoft Windows NT/2K/XP
           OS details: Microsoft Windows XP Pro RC1+ through final release
           Service Info: OSs: Windows, Windows XP

           Nmap finished: 2 IP addresses (2 hosts up) scanned in 88.392 seconds

        Пример 2. Пример сканирования с флагами чердака

            # sudo nmap -sn -PU 172.16.42.1/24

            Starting Nmap 7.91 ( https://nmap.org ) at 2022-05-04 15:57 MSK
            Nmap scan report for 172.16.42.1
            Host is up (0.012s latency).
            MAC Address: 06:26:BB:79:12:5B (Unknown)
            Nmap scan report for 172.16.42.2
            Host is up (0.17s latency).
            MAC Address: 94:94:26:4D:60:8B (Apple)
            Nmap scan report for 172.16.42.7
            Host is up (0.14s latency).
            MAC Address: E8:9E:B4:D0:F9:E3 (Hon Hai Precision Ind.)
            Nmap scan report for 172.16.42.21
            Host is up (0.20s latency).
            MAC Address: 5E:4B:46:63:F9:00 (Unknown)
            Nmap scan report for 172.16.42.30
            Host is up (0.21s latency).
            MAC Address: 28:C2:DD:2B:0F:DB (AzureWave Technology)
            Nmap scan report for 172.16.42.66
            Host is up (0.30s latency).
            MAC Address: BA:E2:94:AB:41:DB (Unknown)
            Nmap scan report for 172.16.42.49
            Host is up.
            Nmap done: 256 IP addresses (7 hosts up) scanned in 16.20 seconds

        Пример 3. Пример сканирования с флагами чердака + просмотр открытых портов

            # sudo nmap -sV 172.16.42.1,2,7,21,30,66,49

            Starting Nmap 7.91 ( https://nmap.org ) at 2022-05-04 15:59 MSK
            Nmap scan report for 172.16.42.1
            Host is up (0.0040s latency).
            Not shown: 999 filtered ports
            PORT   STATE SERVICE VERSION
            53/tcp open  domain?
            MAC Address: 06:26:BB:79:12:5B (Unknown)

            Nmap scan report for 172.16.42.2
            Host is up (0.0029s latency).
            Not shown: 997 closed ports
            PORT      STATE SERVICE     VERSION
            12345/tcp open  netbus?
            49152/tcp open  ssl/unknown
            62078/tcp open  tcpwrapped
            1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
            SF-Port12345-TCP:V=7.91%I=7%D=5/4%Time=62727933%P=x86_64-apple-darwin17.7.
            SF:0%r(OfficeScan,DEE,"HTTP/1\.1\x20200\x20OK\r\nAccept-Ranges:\x20bytes\r
            SF:\nContent-Length:\x203466\r\nDate:\x20Wed,\x2004\x20May\x202022\x2013:0
            SF:1:34\x20GMT\r\n\r\n<html>\n<head>\n<title>Quick\x20Resto\x20Logging</ti
            SF:tle>\n<style\x20type=\"text/css\">@import\x20url\('styles\.css'\);</sty
            SF:le>\n\n<script\x20src=\"jquery-3\.2\.1\.min\.js\"></script>\n<script\x2
            SF:0type=\"text/javascript\">\n\$\(document\)\.ready\(main\);\n\n//\x20Run
            SF:\x20when\x20document\.ready\x20fires\nfunction\x20main\(\)\x20{\n\t//\x
            SF:20Reference\x20to\x20the\x20websocket\x20object\n\tvar\x20ws;\n\t\n\t//
            SF:\x20Make\x20sure\x20sockets\x20are\x20supported\n\ttestSocket\(\);\n\n\
            SF:t//\x20Event\x20handlers\x20for\x20buttons\n\t\$\('#btnStart'\)\.click\
            SF:(function\(\)\x20{\n\t\tstartSocket\(\);\n\t}\);\n\n\t\$\('#btnStop'\)\
            SF:.click\(function\(\)\x20{\n\t\tstopSocket\(\);\n\t}\);\n\t\n\t\$\('#btn
            SF:Clear'\)\.click\(function\(\)\x20{\n\t\t\$\('#results'\)\.html\(''\);\n
            SF:\t}\);\n\x20\x20\x20\x20\n\x20\x20\x20\x20\$\('#btnReceiveAllLogs'\)\.c
            SF:lick\(function\(\)\x20{\n\t\t\$\.get\(\"/logs_content\.html\",\x20funct
            SF:ion\(data\)\x20{\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
            SF:x20data\x20=\x20data\.replace\(/</g,\x20\"&lt;\"\)\.replace\(/>/g,\x20\
            SF:"&gt;\"\)\.split\('\\n'\)\.join\('</br>'\);\n\x20\x20\x20\x20\x20\x20\x
            SF:20\x20\x20\x20\x20\x20\x20\x20\$\('#results'\)\.ht")%r(GenericLines,84,
            SF:"HTTP/1\.1\x20405\x20Method\x20Not\x20Allowed\r\nAccept-Ranges:\x20byte
            SF:s\r\nContent-Length:\x200\r\nConnection:\x20close\r\nDate:\x20Wed,\x200
            SF:4\x20May\x202022\x2013:01:39\x20GMT\r\n\r\n")%r(GetRequest,E0B,"HTTP/1\
            SF:.1\x20200\x20OK\r\nTransfer-Encoding:\x20chunked\r\nAccept-Ranges:\x20b
            SF:ytes\r\nDate:\x20Wed,\x2004\x20May\x202022\x2013:01:39\x20GMT\r\n\r\nd9
            SF:5\r\n<html>\n<head>\n<title>Quick\x20Resto\x20Logging</title>\n<style\x
            SF:20type=\"text/css\">@import\x20url\('styles\.css'\);</style>\n\n<script
            SF:\x20src=\"jquery-3\.2\.1\.min\.js\"></script>\n<script\x20type=\"text/j
            SF:avascript\">\n\$\(document\)\.ready\(main\);\n\n//\x20Run\x20when\x20do
            SF:cument\.ready\x20fires\nfunction\x20main\(\)\x20{\n\t//\x20Reference\x2
            SF:0to\x20the\x20websocket\x20object\n\tvar\x20ws;\n\t\n\t//\x20Make\x20su
            SF:re\x20sockets\x20are\x20supported\n\ttestSocket\(\);\n\n\t//\x20Event\x
            SF:20handlers\x20for\x20buttons\n\t\$\('#btnStart'\)\.click\(function\(\)\
            SF:x20{\n\t\tstartSocket\(\);\n\t}\);\n\n\t\$\('#btnStop'\)\.click\(functi
            SF:on\(\)\x20{\n\t\tstopSocket\(\);\n\t}\);\n\t\n\t\$\('#btnClear'\)\.clic
            SF:k\(function\(\)\x20{\n\t\t\$\('#results'\)\.html\(''\);\n\t}\);\n\x20\x
            SF:20\x20\x20\n\x20\x20\x20\x20\$\('#btnReceiveAllLogs'\)\.click\(function
            SF:\(\)\x20{\n\t\t\$\.get\(\"/logs_content\.html\",\x20function\(data\)\x2
            SF:0{\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20data\x20=\x
            SF:20data\.replace\(/</g,\x20\"&lt;\"\)\.replace\(/>/g,\x20\"&gt;\"\)\.spl
            SF:it\('\\n'\)\.join\('</br>'\);\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
            SF:\x20\x20\x20\x20\$\('#r");
            MAC Address: 94:94:26:4D:60:8B (Apple)

            Nmap scan report for 172.16.42.7
            Host is up (0.0054s latency).
            All 1000 scanned ports on 172.16.42.7 are closed
            MAC Address: E8:9E:B4:D0:F9:E3 (Hon Hai Precision Ind.)

            Nmap scan report for 172.16.42.30
            Host is up (0.014s latency).
            Not shown: 999 filtered ports
            PORT   STATE SERVICE VERSION
            22/tcp open  ssh     OpenSSH for_Windows_8.1 (protocol 2.0)
            MAC Address: 28:C2:DD:2B:0F:DB (AzureWave Technology)

            Nmap scan report for 172.16.42.66
            Host is up (0.0088s latency).
            Not shown: 998 closed ports
            PORT      STATE SERVICE    VERSION
            49152/tcp open  unknown
            62078/tcp open  tcpwrapped
            MAC Address: BA:E2:94:AB:41:DB (Unknown)

            Nmap scan report for 172.16.42.49
            Host is up (0.000026s latency).
            Not shown: 996 closed ports
            PORT      STATE SERVICE VERSION
            22/tcp    open  ssh     OpenSSH 8.6 (protocol 2.0)
            5000/tcp  open  rtsp    AirTunes rtspd 610.19.1
            7000/tcp  open  rtsp    AirTunes rtspd 610.19.1
            49152/tcp open  unknown

            Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
            Nmap done: 7 IP addresses (6 hosts up) scanned in 295.31 seconds


    ОПРЕДЕЛЕНИЕ ЦЕЛИ СКАНИРОВАНИЯ
       В командной строке Nmap все, что не является опцией (или аргументом опции), рассматривается как цель
       сканирования. В простейшем случае для сканирования используется IP адрес или сетевое имя целевой
       машины.

       Иногда необходимо просканировать целую сеть. Для этого Nmap поддерживает CIDR адресацию.

       Вы можете добавить /кол-во бит к IP адресу или сетевому имени и Nmap просканирует каждый IP адрес, для
       которого первые кол-во бит такие же как и у заданного хоста. Например, 192.168.10.0/24 просканирует
       256 хостов между 192.168.10.0 (бинарное: 11000000 10101000 00001010 00000000) и 192.168.10.255
       (бинарное: 11000000 10101000 00001010 11111111) включительно. 192.168.10.40/24 сделает абсолютно то же
       самое. Зная, что IP адрес scanme.nmap.org 64.13.134.52, при записи типа scanme.nmap.org/16 будет
       произведено сканирование 65,536 IP адресов между 64.13.0.0 и 64.13.255.255. Наименьшее допустимое
       значение /0, при котором будет просканирован весь Интернет. Наибольшее значение /32, при котором будет
       просканирован только заданный хост или IP адрес, т.к. все адресные биты заблокированы.

       CIDR нотация коротка, однако не всегда достаточно гибка. Например, вы хотите просканировать
       192.168.0.0/16, но пропустить все IP-адреса, оканчивающиеся на .0 или .255, т.к. обычно это
       широковещательные адреса. Nmap может осуществить такое сканирование путем задания диапазонов в
       октетах. Вместо определния обычного IP адреса, вы можете определить для каждого октета либо
       разделенный запятыми список чисел, либо диапазон. Например, 192.168.0-255.1-254 пропустит все адреса в
       диапазоне оканчивающиеся на .0 и .255. Диапазоны не обязательно задавать только в последних октетах:
       при записи 0-255.0-255.13.37 будет произведено сканирование всех адресов в Интернете оканчивающихся на
       13.37. Такой тип сканирования может быть полезен для исселедования просторов Интернета.

       IPv6 адреса могут быть определны только в форме, полностью соответствующей правильной форме записи
       IPv6 адресов. CIDR и использование диапазонов в октетах не применимо к IPv6 адресам, т.к. они редко
       используются.

       Вы можете передавать в командной строке Nmap различные варианты определения целей, не обязательно
       одного типа. Команда nmap scanme.nmap.org 192.168.0.0/16 10.0.0,1,3-7.0-255 сделает то, что вы
       ожидаете.

       Цели сканирования обычно задаются в командной строке, и существуют различные опции контроля выбора
       целей:

       -iL имя_файла (Ввод из списка)
           Считывает цели из имя_файла. Хотя передача большого списка хостов для сканирования является
           обычным явлением, это не удобно. Например, ваш DHCP сервер передают вам список из 10,000
           используемых им на данный момент адресов, и вы хотите его просканировать. Или, возможно, вы хотите
           просканировать все IP адреса, кроме переданных им, чтобы выявить несанкционированное использование
           статических IP адресов. Просто сгенерируйте список хостов для сканирования и передайте имя файла в
           Nmap как аргумент для опции-iL. Записи в файле могут находиться в любой приемлимой для Nmap форме
           (IP адреса, сетевые имена, CIDR, IPv6, или диапазоны в октетах). Каждая запись должна быть
           отделена пробелом или несколькими, символами табуляции либо символами перехода на новую строку. Вы
           можете передать в качестве аргумента дефис(-) как имя файла, если хотите, чтобы Nmap считывал
           список хостов из стандартного ввода, а не из файла.

       -iR кол-во хостов (Выбирает произвольные цели)
           Для сканирования в пределах всего Интернета или каких-либо исследований, вам, возможно,
           понадобится выбрать цели произвольно. Аргумент кол-во хостов определяет сколько необходимо
           сгенерировать IP адресов. Неподходящие IP адреса, такие как частные, широковещательные или
           нелокализованные диапазоны адресов автоматически пропускаются. Аргумент 0 может быть передан для
           бесконечного сканирования. Имейте в виду, что некоторым системным администраторам может не
           понравиться неразрешенное сканирование их сетей и они могут пожаловаться. Используйте эту опцию на
           свой страх и риск! Если в дождливый денек вам будет скучно, попробуйте команду nmap -sS -PS80 -iR
           0 -p 80

    ОБНАРУЖЕНИЕ ХОСТОВ
        Одна из первейших задач при исследовании любой сети это сократить (иногда довольно большой) набор IP
        диапазонов до списка активных или интересных хостов. Сканирование каждого порта каждого IP адреса
        медленно и необязательно. Конечно же то, что делает хост интересным для исселедования во многом
        определяется целями сканирования. Сетевые администраторы возможно будут заинтересованы только в
        хостах, на которых запущена определенная служба, в то время как тем, кого интересует безопасность,
        будут интересны все устройства с IP адресами. Задачи администраторов по обнаружению работающих хостов
        в сети могут быть удовлетворены обычным ICMP пингом, людям же, которые тестируют способность сети
        противостоять атакам из вне, необходимо использовать разнообразные наборы запросов с целью обхода
        брандмауэра.

        Посколько задачи, требующие обнаружения хостов столь различны, Nmap предоставляет большое разнообразие
        опций для различных методов. Задачу обнаружения хостов иногда называют пинг сканированием (ping scan),
        однако она намного превосходит использование обычных ICMP запросов ассоциирующихся с вездесущими ping
        утилитами. Пользователи могут полностью пропустить шаг пинг сканирования с помощью опции сканирования
        с целью составления списка (-sL) или просто отключив его (-PN), или сканировать сеть с помощью
        произвольных комбинаций мультипортовых TCP SYN/ACK, UDP и ICMP запросов. Целью всех этих запросов
        является получение ответов, указывающих, что IP адрес в настоящее время активен (используется хостом
        или сетевым устройством). В большинстве сетей лишь небольшой процент IP адресов активен постоянно. Это
        особенно характерно для адресных пространств вида 10.0.0.0/8. Такие сети имеют 16 млн. IP адресов, но
        я видел, как они используются компаниями, в которых не более тысячи машин. Функция обнаружения хостов
        может найти эти машины в этом необъятном море IP адресов.

        Если не задано никаких опций обнаружения хостов, то Nmap посылает TCP ACK пакет на порт 80 и запрос на
        ICMP эхо ответ кажодй целевой машине. Исключение составляет ARP сканировании всех целей в сети. Для
        непривилегированных пользователей Unix оболочки, вместо ACK пакета посылается SYN используя системный
        вызов connect Эти умолчания равнозначны опциям -PA -PE. Такое сканирование достаточно для локальных
        сетей, но для исследования безопасности необходимо использовать более сложные наборы запросов.

        Опции -P* (определяющие тип пинг сканирования) могут комбинироваться. Вы можете увеличить шансы обхода
        строго брандмауэра посылая множество запросов различных типов, используя различные TCP порты/флаги и
        ICMP коды. Также имейте в виду, что даже если вы определите различные -P* опции, по умолчанию
        применительно к целям локальной сети будет производиться и ARP сканирование (-PR), т.к. оно почти
        всегда быстрее и более эффективно.

        По умолчанию после обнаружения хостов Nmap начинает сканирование портов каждой активной машины. Так
        будет, даже если вы укажите на использование нестандартных методов обнаружения хостов, например, с
        использованием UDP запросов (-PU). Прочтите об опции -sP, чтобы узнать, как выполнить только
        обнаружение хостов, или используйте опцию -PN, чтобы пропустить обнаружение хостов и осуществить
        сканирование портов всех целевых машин. С помощью следующих опций можно настраивать функцию
        обнаружения хостов:

        -sL (Сканирование с целью составления списка)
           Это тип сканирования является "упрощенной" версией функции обнаружения хостов, при помощи которого
           просто будет создан список хостов заданной сети без посылки каких-либо пакетов целевым машинам. По
           умолчанию Nmap все же будет осуществлять обратное разрешение DNS с целью узнавания имен хостов.
           Часто бывает удивительно, как много полезной информации могут содержать обычные имена хостов.
           Например, fw.chi это имя брандмауэра одной Чикагской компании.

           В конце Nmap также сообщает общее количество IP адресов. Этот тип сканирования также является
           хорошим способом проверить, что вы действительно знаете IP адреса необходимых вам целей. Если
           имена хостов содержат неизвестные вам доменные имена, то стоит провести дальнейшее исследование,
           чтобы избежать сканирования сети не той компании, которая вам нужна.

           Т.к. целью является просто составление списка целевых хостов, то опции с большим уровнем
           функциональности, такие как сканирование портов, определение ОС или пинг сканирование не могут
           сочетаться с рассматриваемой опцией. Если вы хотите отключить пинг сканирование, но хотите
           использовать опции с таким высоким уровнем функциональности, то почитайте об опции -PN.

       -sP (Пинг сканирование)
           Эта опция указывает Nmap произвести пинг сканирование (определение хостов), а затем вывести список
           доступных хостов, т.е. тех, которые ответили на запросы. Определение маршрутов и NSE скрипты также
           используются, если необходимо, однако дальнейшее тестирование (как сканирование портов или
           определение ОС) не производится. По умолчанию эта опция считается как бы на один шаг более
           тщательной, чем сканирование с целью составления простого списка хостов, и может быть использована
           в этих же целях. Она позволяет произвести исследование целевой сети без привлечения внимания.
           Знание, какие хосты в сети в данный момент работают, для атакующих ценне, чем просто список IP
           адресов и сетевых имен, предоставляемых опцией -sL.

           Эта опция также полезна системным администраторам. Она может быть использована для подсчета
           количества работающих в сети машин или мониторинга доступности сервера. Это часто называют "пинг
           чисткой" (ping sweep) и результаты, предоставляемые этой опцией, заслуживают больше доверия, чем
           обычное пингование широковещательных адресов, т.к. большинство хостов не отвечают на подобные
           запросы.

           По умолчанию опцией -sP посылаются запрос на ICMP это ответ и TCP ACK пакет на порт 80. Когда
           используется непривилегированным пользователем, посылается только SYN пакет (используя системные
           вызов connect) на порт 80 целевой машины. Когда привилегированный пользователь производит
           сканирование целей локальной сети, то используются ARP запросы до тех пор, пока не будет задано
           --send-ip. Для большей гибкости опция -sP может быть скомбинирована с любой из опций -P* (за
           исключением -PN). Если используется какой-либо из этих типов запросов и опции для задания номеров
           портов, то запросы по умолчанию (ACK и это ответы) опускаются. Когда между машиной с Nmap и
           целевой сетью расположен строгий брандмауэр, то рекомедуется использование таких расширенных
           методов сканирования. Иначе некоторые из хостов могут быть не определены, т.к. брандмауэр
           заблокировал запрос или ответ.

       -PN (Не использовать пинг сканирование)
           Указывает Nmap полностью пропустить этап обнаружения хостов. Обычно, Nmap использует этот этап для
           обнаружения активных машин, к которым можно применить более углубленное сканирование. По умолчанию
           Nmap производит углубленное сканирование, такое как сканирование портов, определение версии или
           определение ОС только обнаруженных работающих хостов. После отключения этапа обнаружения хостов
           опцией -PN, Nmap будет производить сканирование каждого заданого целевого IP адреса. Так что, если
           для сканирования будет определена сеть с адресным пространством класса B (/16), то будет
           произведено сканирование всех 65,536 IP адресов. Т.к. этап обнаружения хостов и составления списка
           целей сканирования пропущен, то Nmap будет исполнять запрошенные функции, как если бы каждый IP
           адрес был активен. Для машин локальной сети будет произведено ARP сканирование (пока не зададите
           --send-ip), т.к. Nmap необходимы MAC адреса для дальнейшего сканирования целевых хостов. Раньше
           эта опция задавалась флагом P0 (используется нуль), но была переименова, чтобы избежать путаницы с
           пингованием с использованием IP протокола PO (используется буква O).

        -PS список_портов (TCP SYN пингование)
           Эта опция посылает пустой TCP пакет с установленным SYN флагом. Порт по умолчанию - 80 (можно
           задать во время компилирования изменяя DEFAULT_TCP_PROBE_PORT_SPEC

           в nmap.h).

           Альтернативные порты задаются в качестве параметров. Синтаксис такой же как и для опции -p за
           исключением того, что спецификаторы типа T: недопустимы. Примеры: -PS22 и
           -PS22-25,80,113,1050,35000. Имейте в виду, что между списком портов и -PS не должно быть пробела.
           Если заданы несколько запросов, то они будут посланы параллельно.

           Установленные флаг SYN указывает удаленной системе, что вы пытаетесь установить соединение. Если
           порт назначения закрыт, то в ответ посылается RST (сброс) пакет. Если порт открыт, то удаленная
           система предпримет второй шаг в 3-ех этапной последовательности установки TCP соединения путем
           ответа

           SYN/ACK TCP пакетом. Система, на которой работает Nmap, сбрасывает почти установленное соединение
           отвечая RST пакетом вместо ACK, что привело бы к установке полного соединения. RST пакет
           посылается ядром системы, на которой работает Nmap, в ответ на непредвиденный SYN/ACK пакет, а не
           самой Nmap.

           Nmap не важно открыт порт или закрыт. Ответы пакетами RST или SYN/ACK описанными выше, указывают
           Nmap на то, что хост доступен и может отвечать на запросы.

           На Unix машинах, только пользователь с правами root, как правило, может посылать и принимать сырые
           TCP пакеты.  Для непривилегированного пользователя для каждого целевого порта инициируется
           системный вызов connect. Поэтому при попытке установить соединение на целевой хост посылается SYN
           пакет. Если на вызов connect приходит быстрый ответ или отказ типа ECONNREFUSED, значит TCP стек
           получил SYN/ACK или RST пакет, и хост помечается как доступный. Если соединение не устанавливается
           по причине истечения времени (timeout), то хост помечается как не работающий. Этот механизм также
           используется для соединений с использованием протокола IPv6, т.к. построение сырых пакетов IPv6
           еще не реализовано в Nmap.

        -PA список_портов (TCP ACK пингование)
           Этот тип пингования очень похож на описанный выше. Разница состоит в том, как вы могли догадаться,
           что вместо установки SYN флага устанавливается TCP ACK флаг. Такой ACK пакет имеет своей целью
           распознавание данных во время установленного TCP соединения, но такого соединения не существует,
           поэтому удаленные хосты всегда будут отвечат на такой запрос RST пакетом, тем самым выдавая свое
           существование.

           Опция -PA использует тот же порт по умолчанию, что и SYN запросы (80), и так же может принимать в
           качестве параметра список портов в том же формате. Если эту опцию пытается использовать
           непривилегированный пользователь или задана цель в формате IPv6, то используется механизм с
           использованием вызова connect описанный выше. Этот механизм несовершенен, т.к. при использовании
           вызова connect вместо ACK пакета посылается SYN.

           Причина, по которой Nmap предоставляет оба типа пингования (SYN и ACK), состоит в повышении шансов
           обхода брандмауэров. Многие администраторы конфигурируют роутеры или другие простые брандмауэры на
           блокировку входящих SYN пакетов за исключением тех, что предназначены для публичных служб, таких
           как веб сайт или почтовый сервер. Тем самым предотвращаются все остальные соединения, и в то же
           время пользователи могут беспрепятственно выходить в Интернет. Такой подход не требует много
           ресурсов от брандмауэров/роутеров и широко поддерживается различными аппаратными и программными
           фильтрами.

           для реализации такого подхода имеет опцию --syn. Когда брандмауэр использует такие правила, то
           запросы с установленным флагом SYN (-PS), посланные на закрытые порты, с большой вероятностью
           будут заблокированы. В таких случаях более выгодно использовать запросы с флагом ACK, т.к. они не
           попадают под эти правила.

           Другим популярным типом сетевого экрана является брандмауэр блокирующий все непредвиденные пакеты.
           Изначально эта функция поддерживалась только в наиболее продвинутых брандмауэрах, хотя с годами
           она становится все популярнее. Использующийся в Linux сетевой экран Netfilter/iptables реализует
           этот механизм с помощью опции --state, которая категоризирует пакеты в зависимости от состояния
           соединения. Против таких систем лучше использовать пакеты SYN, т.к. непредвиденные пакеты ACK с
           большой вероятностью будут распознаны как фиктивные и заблокированы. Решение такого
           затруднительного положение состоит в том, чтобы посылать и SYN и ACK запросы путем задания опций
           -PS и -PA.

        -PU список_портов (UDP пингование)
           Еще одной функцией используемой для обнаружения хостов является UDP пингование, которая посылает
           пустой (пока не задана опция --data-length) UDP пакет на данные порты. Список портов задается в
           том же формает, что и для описанных выше опций -PS и -PA. Если порты не заданы, то по умолчанию
           используется 31338. Порт по умолчанию может быть задан во время компиляции путем изменения
           DEFAULT_UDP_PROBE_PORT_SPEC в nmap.h.

           По умолчанию выбран не распростаненный порт, т.к. отправка запросов на открытые порты нежелательна
           для этого типа сканирования.

           Целью запроса UDP является получение в ответ ICMP пакета с ошибкой "порт недостижим". Это
           указывает Nmap на то, что машина работает и доступна. Другие типы ICMP ошибок, такие как хост/сеть
           недоступна или превышение TTL указывают на то, что машина выключена или недоступна. Отсутствие
           ответа интерпретируется этим же путем. Если такой запрос посылается на открытый порт, то
           большинство служб просто игнорируют пустой пакет и не посылают никакого ответа. Поэтому портом по
           умолчанию является 31338, т.к. он вряд ли будет использоваться какой-либо службой. Лишь некоторые
           службы, такие как Character Generator (chargen) protocol, ответят на пустой UDP пакет, и это также
           укажет Nmap на то, что машина доступна.

           Основным преимуществом такого типа сканирования является то, что он позволяет обходить
           брандмауэры, фильтрующие только TCP запросы. Например, однажды у меня был беспроводной
           широкополосный роутер Linksys BEFW11S4. Внутренний интерфейс этого устройства фильтровал по
           умолчанию все TCP порты, в то время как в ответ на UDP запросы посылалось сообщение об ошибке
           "порт недостижим", что делало его работу бесполезной.

       -PE; -PP; -PM (Типы пинг пакетов ICMP)
           В дополнении к нестандратным методам обнаружения хостов с помощью TCP и UDP запросов, Nmap может
           посылать и стандартные пакеты, используемые вездесущей программой ping. Nmap посылает ICMP пакет
           типа 8 (эхо запрос) на целевой IP адрес, ожидая в ответ от доступного хоста пакет типа 0 (эхо
           ответ).  К сожалению для сетевых исследователей, многие хосты и брандмауэры теперь блокируют такие
           пакеты вместо того, чтобы ответить на них, как это требуется в RFC 1122[3]. По этой причине
           сканеры использующе только ICMP запросы редко бывают полезны при сканировании неизвестных целей в
           Интернете. Но они могут быть полезны системным администраторам, занимающимся мониторингом
           внутренней сети. Используйте опцию -PE, чтобы активировать такой тип сканирования.

           Но Nmap использует не только стандратный эхо запрос. В стандарте ICMP (RFC 792[4]) также
           определены запросы временной метки, информационные запросы и запросы адресной маски с кодами 13,
           15 и 17 соответственно. Хотя они служат для того, чтобы узнать какую-либо информацию, такую как
           адресную маску или текущее время, они могут быть легко применены для обнаружения целей. Система,
           которая отвечает на них, работает и доступна. В настоящее время Nmap не использует информационные
           запросы, т.к. они не получиил широкого распространения. Стандарт RFC 1122 наставивает на том, что
           «хост НЕ ДОЛЖЕН посылать такие сообщения». Запросы временной метки или адресной маски могут быть
           посланы путем задания опций -PP и -PM соответственно. Ответ на запрос временной метки (ICMP код
           14) или на запрос адресной маски (код 18) указывают на то, что хост доступен. Эти запросы могут
           быть полезны, когда администраторы блокируют пакеты эхо запросов, но забывают о том, что другие
           типы ICMP запросов могут быть использованы в тех же целях.

        -PO список_протоколов (пингование с использованием IP протокола)
           Новейшей опцией для обнаружения хостов является пингование с использованием IP протокола, которая
           посылает IP пакеты с номером протокола, указанным в заголовке пакета. Список протоколов задается в
           том же формате, что и список портов в описанных выше опциях обнаружения хостов с помощью
           протоколов TCP и UDP. Если не указан ни один протокол, то по умолчанию будут использованы IP
           пакеты ICMP (протокол 1), IGMP (протокол 2) и IP-in-IP (протокол 4). Протоколы по умолчанию могут
           быть заданы во время компиляции путем изменения DEFAULT_PROTO_PROBE_PORT_SPEC в nmap.h.  Имейте в
           виду, что для ICMP, IGMP, TCP (протокол 6) и UDP (протокол 17), пакеты посылаются с "правильными"
           заголовками протокола, в то время как для остальных протоколов пакеты посылаются без
           дополнительной информации после IP заголовка (пока не задана опция --data-length).

           При использовании этого метода ожидаются ответы по протоколу исходного запроса, либо ICMP
           сообщение о недостижимости, что свидетельствует о том, что данный протокол не поддерживается
           удаленным хостом. Оба варианта ответа означают, что целевой хост доступен.

       -PR (ARP пингование)
           Одной из наиболее популярных сфер применения Nmap является сканирование локальных сетей (LAN). В
           большинстве локальных сетей, особенно тех, которые используют диапазоны частных адресов
           определенные в RFC 1918[5], большое количество IP адересов не используется в любой момент времени.
           Когда Nmap пытается послать сырой IP пакет, такой как ICMP эхо запрос, операционная система должна
           определить MAC-адрес (ARP) соответствующий целевому IP, чтобы правильно адресовать фрейм. Это
           часто бывает медленно и проблематично, т.к. операционные системы не были написаны с учетом того,
           что им придется посылать миллионы ARP запросов недоступным хостам в короткий промежуток времени.

           ARP сканирование позволяет Nmap вместо ARP запросов использовать свои собственные оптимизированные
           алгоритмы. И если Nmap получает ответ, то ей даже нет необходимости беспокоиться о других типах
           обнаружения хостов, основанных на IP пакетах. Этот делает ARP сканирование более быстрым и
           надежным. Поэтому оно применяется по умолчанию для сканирования локальных сетей. Даже если указаны
           другие типы сканирования (как -PE или -PS), Nmap все равно использует ARP сканирование для машин
           локальной сети. Если вы абсолютно не хотите использовать такой тип сканирования, то задайте опцию
           --send-ip.

        --traceroute (Отслеживать путь к хосту)
           Отслеживание осуществляется после сканирования, используя результаты этого сканирования для
           определения порта и протокола, с помощью которых можно будет достичь цели. Процедура работает со
           всеми типами сканирования кроме сканирования с использованием системного вызова connect (-sT) и
           "ленивого" (idle) сканирования (-sI). Все отслеживания используют динамическую модель таймингов
           Nmap и осуществляются параллельно.

           Процедура отслеживания маршрута работает путем посылки пакетов с низким TTL (time-to-live
           (временем-жизни) в попытке получить в ответ ICMP сообщение Time Exceeded (Превышение Времени
           Жизни) от промежуточных узлов между сканером и целевым хостом. Стандартные реализации процедуры
           отслеживания маршрута начинают с TTL равным 1, а затем увеличивают его до тех пор, пока не будет
           достигнут целевой хост. В реализации же этой процедуры в Nmap сначала устанавливается высокий TTL,
           а затем TTL уменьшается, пока не станет равным 0. Это позволяет Nmap использовать "умные"
           алгоритмы кэширования с целью увеличения скорости отслеживания маршрута. В среднем Nmap посылает
           5-10 пакетов на хост, в зависимости от условий в сети. В случае сканирования единственной подсети
           (напр. 192.168.0.0/24), возможно будет необходимо послать только один пакет на каждый хост.

       --reason (Показать причины состояний портов и хостов)
           Показывает информацию о причинах, по которым каждый порт установлен в какое-либо состояние, и по
           которым каждый хост работает или нет. Эта опция выводит тип пакета, по которому было определено
           состояние порта или хоста. Например, RST пакет от закрытого порта или эхо ответ от работающего
           хоста. Информация, которую может предоставить Nmap, определяется типом сканирования или
           пингования. SYN сканирование и SYN пингование (-sS и -PS) описываются очень детально, а информация
           о сканировании с использованием TCP соединений (-sT) ограничена реализацией системного вызова
           connect. Эта функция автоматически активируется при использовании опции отладки (-d), и результаты
           ее работы хранятся в XML файлах, даже если эта опция не была задана.

       -n (Не производить разрешение DNS имен)
           Указывает Nmap никогда не производить обратное разрешение DNS

           имен каждого обнаруженного активного IP адереса. Преобразование DNS может быть медленным даже со
           встроенным в Nmap параллельным преобразователем IP адресов, поэтому данная опция может сократить
           время сканирования.

       -R (Производить разрешение DNS имен для всех целей)
           Указыват Nmap всегда производить обратное разрешение DNS имен для каждого целевого IP адреса.
           Обычно DNS преобразование применяется только к доступным хостам.

       --system-dns (Использовать системный DNS преобразователь)
           По умолчанию Nmap преобразует IP адреса путем посылки запросов непосредственно серверам имен,
           указанным в вашей системе, и последующим анализом ответов. Многие запросы (часто десятки)
           исполняются параллельно для увеличения производительности. Задайте эту опцию, чтобы использовать
           ваш системный преобразователь IP адресов (один IP адрес за один системный вызов getnameinfo). Это
           медленно и редко бывает полезно, до тех пор, пока вы не найдете ошибку в параллельном
           преобразователе Nmap (если найдете, известите нас, пожалуйста). Системный преобразователь всегда
           используется для сканирования с использованием протокола IPv6.

       --dns-servers server1[,server2[,...]]  (Сервера для обратного разрешения DNS)
           По умолчанию Nmap определяет DNS сервера (для разрашения rDNS) из вашего resolv.conf файла (Unix)
           или из реестра (Win32). Вы можете использовать эту опцию для задания альтернативных серверов. Эта
           опция игнорируется, если вы используете --system-dns или сканирование по протоколу IPv6.
           Использование нескольких DNS серверов частно увеличивает скорость сканирования, особенно если вы
           выбираете официальные сервера для IP пространства вашей цели. Эта опция также может увеличить
           незаметность, т.к. ваши запросы могут быть перенаправлены любым рекурсивным DNS сервером в
           Интернете.

           Эта опция также бывает полезна при сканировании частных сетей. Иногда лишь некоторые сервера имен
           предоставляют правильную rDNS информацию, и вы можете даже не знать, где они. Вы можете
           просканировать сеть на наличие открытого порта 53 (возможно с помощью фукнкции определения
           версии), затем попробовать составить список (-sL) указывая по очереди все сервера имен в опции
           --dns-servers до тех пор, пока не найдете тот, который работает.

    ОСНОВЫ СКАНИРОВАНИЯ ПОРТОВ
    
            Хотя Nmap постоянно наращивала функциональность, изначально утилита разрабатывалась как эффективный
            сканер портов, и она по-прежнему сохраняет свои основные функции. Простой командой nmap цель
            сканирования будет произведено сканирование более чем 1660 TCP портов на целевой машине. В то время
            как многие сканеры портов традиционно разделяют все порты на закрытые и открытые, Nmap имеет более
            подробную шкалу деления. Она подразделяет порты на шесть состояний: открыт, закрыт, фильтруется, не
            фильтурется, открыт|фильтруется или закрыт|фильтруется.

            Эти состояния не являются собственно характеристиками самих портов, а лишь описывают, как Nmap видит
            их. Например, сканирование из той же сети, что и цель, может показать, что порт 135/tcp открыт, в то
            время как сканирование из Интернета в то же время и с теми же опциями может показать, что порт
            фильтруется.

    Шесть состояний портов распознаваемых Nmap

       открыт (open)
           Приложение принимает запросы на TCP соединение или UDP пакеты на этот порт. Обнаружение этого
           состояния обычно является основной целью сканирования. Люди разбирающиеся в безопасности знают,
           что каждый открытый порт это прямой путь к осуществлению атаки. Атакующие хотят использовать
           открытые порты, а администраторы пытаются закрыть их или защитить с помощью брадмауэров так, чтобы
           не мешать работе обычных пользователей. Октрытые порты также интересны с точки зрения
           сканирования, не связанного с безопасностью, т.к. они позволяют определить службы доступные в
           сети.

       закрыт (closed)
           Закрытый порт доступен (он принимает и отвечает на запросы Nmap), но не используется каким-либо
           приложением. Они могут быть полезны для установления, что по заданному IP адресу есть работающий
           хост (определение хостов, ping сканирование), или для определения ОС. Т.к. эти порты достижимы,
           может быть полезным произвести сканирование позже, т.к. некоторые из них могут открыться.
           Администраторы могут заблокировать такие порты с помощью брандмауэров. Тогда их состояние будет
           определено как фильтруется, что обсуждается далее.

       фильтруется (filtered)
           Nmap не может определить, открыт ли порт, т.к. фильтрация пакетов не позволяет достичь запросам
           Nmap этого порта. Фильтрация может осуществляться выделенным брадмауэром, правилами роутера или
           брандмауэром на целевой машине. Эти порты бесполезны для атакующих, т.к. предоставляют очень мало
           информации. Иногда они отвечают ICMP сообщениями об ошибке, такими как тип 3 код 13 (destination
           unreachable: communication administratively prohibited (цель назначения недоступна: связь
           запрещена администратором)), но чаще встречаются фильтры, которые отбрасывают запросы без
           предоставления какой-либо информации. Это заставляет Nmap совершить еще несколько запросов, чтобы
           убедиться, что запрос был отброшен фильтром, а не затором в сети. Это очень сильно замедляет
           сканирование.

       не фильтруется (unfiltered)
           Это состояние означает, что порт доступен, но Nmap не может определить открыт он или закрыт.
           Только ACK сканирование, используемое для определения правил брандмауэра, может охарактеризовать
           порт этим состоянием. Сканирование не фильтруемых портов другими способами, такими как Window
           сканирование, SYN сканирование или FIN сканирование может помочь определить, является ли порт
           открытым.

       открыт|фильтруется (open|filtered)
           Nmap характеризует порт таким состоянием, когда не может определить октрыт порт или фильтруется.
           Это состояние возникает при таких типах сканирования, при которых открытые порты не отвечают.
           Отсутствие ответа также может означать, что пакетный фильтр не пропустил запрос или ответ не был
           получен. Поэтому Nmap не может определить наверняка открыт порт или фильтруется. При сканировании
           UDP, по IP протоколу, FIN, NULL, а также Xmas порт может быть охарактеризован таким состоянием.

       закрыт|фильтруется (closed|filtered)
           Это состояние используется, когда Nmap не может определить закрыт порт или фильтруется.
           Используется только при сканировании IP ID idle типа.